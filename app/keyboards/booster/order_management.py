from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def my_orders_list_keyboard(orders, show_active_only=True, page=0, per_page=5):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–∞–∑–æ–≤ –±—É—Å—Ç–µ—Ä–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    keyboard = []
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–∫–∞–∑—ã –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
    status_groups = {
        "confirmed": "üîÑ",
        "in_progress": "üöÄ", 
        "pending_review": "üìã",
        "completed": "‚úÖ"
    }
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–∫–∞–∑—ã
    if show_active_only:
        filtered_orders = [o for o in orders if o.status in ["confirmed", "in_progress", "pending_review"]]
    else:
        filtered_orders = orders
    
    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    start_idx = page * per_page
    end_idx = start_idx + per_page
    page_orders = filtered_orders[start_idx:end_idx]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑—ã
    for order in page_orders:
        status_emoji = status_groups.get(order.status, "‚ùì")
        service_name = {
            "regular_boost": "–û–±—ã—á–Ω—ã–π –±—É—Å—Ç",
            "hero_boost": "–ë—É—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞",
            "coaching": "–ì–∞–π–¥/–æ–±—É—á–µ–Ω–∏–µ"
        }.get(order.service_type, order.service_type)
        
        keyboard.append([
            InlineKeyboardButton(
                text=f"{status_emoji} –ó–∞–∫–∞–∑ {order.order_id} - {service_name}",
                callback_data=f"booster_order_details:{order.order_id}"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    
    # –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    if len(filtered_orders) > per_page:
        pagination_row = []
        
        # –ö–Ω–æ–ø–∫–∞ "–Ω–∞–∑–∞–¥"
        if page > 0:
            pagination_row.append(
                InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"booster_orders_page:{show_active_only}:{page-1}")
            )
        
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        pagination_row.append(
            InlineKeyboardButton(text=f"{page+1}/{(len(filtered_orders)-1)//per_page + 1}", callback_data="noop")
        )
        
        # –ö–Ω–æ–ø–∫–∞ "–≤–ø–µ—Ä–µ–¥"
        if end_idx < len(filtered_orders):
            pagination_row.append(
                InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"booster_orders_page:{show_active_only}:{page+1}")
            )
        
        if pagination_row:
            nav_buttons.append(pagination_row)
    
    # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞
    if show_active_only:
        nav_buttons.append([
            InlineKeyboardButton(text="üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã", callback_data="booster_orders_filter:all:0")
        ])
    else:
        nav_buttons.append([
            InlineKeyboardButton(text="üîÑ –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ", callback_data="booster_orders_filter:active:0")
        ])
    
    # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    nav_buttons.append([
        InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="booster_refresh_orders")
    ])
    
    keyboard.extend(nav_buttons)
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def order_management_keyboard(order_id, status):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º"""
    keyboard = []
    
    if status == "confirmed":
        keyboard.append([
            InlineKeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", callback_data=f"booster_start_work:{order_id}")
        ])
    elif status == "in_progress":
        keyboard.extend([
            [InlineKeyboardButton(text="üîí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º", callback_data=f"booster_take_account:{order_id}"),
             InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑", callback_data=f"booster_complete_order:{order_id}")]
        ])
    elif status == "pending_review":
        keyboard.append([
            InlineKeyboardButton(text="‚è≥ –û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏", callback_data="noop")
        ])
    elif status == "completed":
        keyboard.append([
            InlineKeyboardButton(text="‚úÖ –ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω", callback_data="noop")
        ])
    elif status == "paused":
        keyboard.append([
            InlineKeyboardButton(text="‚è∏Ô∏è –ó–∞–∫–∞–∑ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", callback_data="noop")
        ])
    
    keyboard.append([
        InlineKeyboardButton(text="üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="booster_refresh_orders")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def booster_order_details_keyboard(order_id, status):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏ –∑–∞–∫–∞–∑–∞ –¥–ª—è –±—É—Å—Ç–µ—Ä–∞"""
    keyboard = []
    
    if status == "confirmed":
        keyboard.append([
            InlineKeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", callback_data=f"booster_start_work:{order_id}")
        ])
    elif status == "in_progress":
        keyboard.extend([
            [InlineKeyboardButton(text="üîí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º", callback_data=f"booster_take_account:{order_id}"),
             InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑", callback_data=f"booster_complete_order:{order_id}")]
        ])
    elif status == "pending_review":
        keyboard.append([
            InlineKeyboardButton(text="‚è≥ –û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏", callback_data="noop")
        ])
    elif status == "completed":
        keyboard.append([
            InlineKeyboardButton(text="‚úÖ –ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω", callback_data="noop")
        ])
    elif status == "paused":
        keyboard.append([
            InlineKeyboardButton(text="‚è∏Ô∏è –ó–∞–∫–∞–∑ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", callback_data="noop")
        ])
    
    keyboard.append([
        InlineKeyboardButton(text="üîô –ö —Å–ø–∏—Å–∫—É –∑–∞–∫–∞–∑–æ–≤", callback_data="booster_refresh_orders")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def account_management_keyboard(order_id, is_account_taken=False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–º"""
    keyboard = []
    
    if is_account_taken:
        keyboard.append([
            InlineKeyboardButton(text="üîì –ü–æ–∫–∏–Ω—É—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data=f"booster_leave_account:{order_id}")
        ])
    else:
        keyboard.append([
            InlineKeyboardButton(text="üîí –ó–∞–Ω—è—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data=f"booster_take_account:{order_id}")
        ])
    
    keyboard.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –∑–∞–∫–∞–∑—É", callback_data=f"booster_order_details:{order_id}")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def booster_work_progress_keyboard(order_id, account_taken=False, status="in_progress"):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ä–∞–±–æ—Ç—ã –±—É—Å—Ç–µ—Ä–∞"""
    keyboard = []
    
    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–º
    if account_taken:
        keyboard.append([
            InlineKeyboardButton(text="üîì –ü–æ–∫–∏–Ω—É—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data=f"booster_leave_account:{order_id}")
        ])
    else:
        keyboard.append([
            InlineKeyboardButton(text="üîí –ó–∞–Ω—è—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data=f"booster_take_account:{order_id}")
        ])
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω
    if status == "in_progress":
        keyboard.append([InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑", callback_data=f"booster_complete_order:{order_id}")])
    elif status == "pending_review":
        keyboard.append([InlineKeyboardButton(text="‚è≥ –û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏", callback_data="noop")])
    elif status == "completed":
        keyboard.append([InlineKeyboardButton(text="‚úÖ –ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω", callback_data="noop")])
    elif status == "paused":
        keyboard.append([InlineKeyboardButton(text="‚è∏Ô∏è –ó–∞–∫–∞–∑ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", callback_data="noop")])
    
    keyboard.append([InlineKeyboardButton(text="üîô –ö —Å–ø–∏—Å–∫—É –∑–∞–∫–∞–∑–æ–≤", callback_data="booster_refresh_orders")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def booster_complete_order_keyboard(order_id):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    keyboard = [
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –∑–∞–∫–∞–∑—É", callback_data=f"booster_order_details:{order_id}")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
