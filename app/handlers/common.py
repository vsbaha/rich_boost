import logging
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from app.keyboards.common.region import region_keyboard
from app.keyboards.user.main_menu import main_menu_keyboard
from app.keyboards.booster.booster_menu import booster_menu_keyboard
from app.keyboards.admin.admin_menu import admin_menu_keyboard
from app.database.crud import add_user, update_user_region, get_user_by_tg_id
from app.states.user_states import RegionStates

router = Router()
logger = logging.getLogger(__name__)

@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    user = await get_user_by_tg_id(message.from_user.id)
    if user:
        logger.info(f"@{message.from_user.username} (id={message.from_user.id}) –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª /start")
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω–æ–µ –º–µ–Ω—é
        if user.role == "admin":
            menu = admin_menu_keyboard()
        elif user.role == "booster":
            menu = booster_menu_keyboard()
        else:
            menu = main_menu_keyboard()
        await message.answer(
            "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.",
            reply_markup=menu
        )
    else:
        await add_user(
            tg_id=message.from_user.id,
            username=message.from_user.username or ""
        )
        logger.info(f"@{message.from_user.username} (id={message.from_user.id}) –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è —á–µ—Ä–µ–∑ /start")
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ä–µ–≥–∏–æ–Ω:",
            reply_markup=region_keyboard()
        )
        await state.set_state(RegionStates.waiting_for_region)

@router.message(RegionStates.waiting_for_region)
async def choose_region(message: Message, state: FSMContext):
    region = message.text.strip()
    valid_regions = ["üá∞üá¨ –ö–†", "üá∞üáø –ö–ó", "üá∑üá∫ –†–£"]
    if region not in valid_regions:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.", reply_markup=region_keyboard())
        return
    await update_user_region(message.from_user.id, region)
    logger.info(f"@{message.from_user.username} (id={message.from_user.id}) –≤—ã–±—Ä–∞–ª —Ä–µ–≥–∏–æ–Ω: {region}")
    await state.clear()
    await message.answer(
        f"–†–µ–≥–∏–æ–Ω –≤—ã–±—Ä–∞–Ω: {region}\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º!",
        reply_markup=main_menu_keyboard()
    )
