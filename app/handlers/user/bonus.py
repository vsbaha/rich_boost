from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from app.database.crud import get_user_by_tg_id
from app.utils.referral import get_referral_link
from app.utils.referral import get_referrals_count
from app.database.models import BonusHistory
from app.database.db import AsyncSessionLocal
from sqlalchemy.future import select

router = Router()

@router.message(F.text == "üéÅ –ë–æ–Ω—É—Å—ã –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã")
async def bonuses_and_referrals(message: Message):
    user = await get_user_by_tg_id(message.from_user.id)
    if not user:
        await message.answer("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞–ø–∏—à–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
        return

    referrals = await get_referrals_count(user.id)
    ref_link = get_referral_link(user)

    # –°—É–º–º–∏—Ä—É–µ–º –±–æ–Ω—É—Å—ã
    if user.region == "üá∞üá¨ –ö–†":
        bonus = user.bonus_kg
        currency = "—Å–æ–º"
    elif user.region == "üá∞üáø –ö–ó":
        bonus = user.bonus_kz
        currency = "—Ç–µ–Ω–≥–µ"
    elif user.region == "üá∑üá∫ –†–£":
        bonus = user.bonus_ru
        currency = "—Ä—É–±."
    else:
        bonus = 0
        currency = ""

    # –ò—Å—Ç–æ—Ä–∏—è –±–æ–Ω—É—Å–æ–≤ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5)
    async with AsyncSessionLocal() as session:
        result = await session.execute(
            select(BonusHistory)
            .where(BonusHistory.user_id == user.id)
            .order_by(BonusHistory.created_at.desc())
            .limit(5)
        )
        history = result.scalars().all()

    history_text = ""
    if history:
        history_text = "\n\n<b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –±–æ–Ω—É—Å—ã:</b>"
        for h in history:
            comment = f" ‚Äî <i>{h.comment}</i>" if h.comment else ""
            history_text += f"\n<b>+{h.amount:.2f} {currency}</b> ({h.source}){comment}"

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º
    if referrals:
        referrals_text = "\n\n<b>–í–∞—à–∏ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–µ:</b>"
        for r in referrals:
            reg_date = r.created_at.strftime('%d.%m.%Y')
            username = f"@{r.username}" if r.username else f"<code>{r.tg_id}</code>"
            referrals_text += f"\n‚Ä¢ {username} ({reg_date})"
    else:
        referrals_text = "\n\n<b>–í–∞—à–∏ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–µ:</b>\n‚Äî"

    text = (
        f"<b>üéÅ –ë–æ–Ω—É—Å—ã –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã</b>\n"
        f"–ë–æ–Ω—É—Å–Ω—ã–π –±–∞–ª–∞–Ω—Å: <b>{bonus:.2f} {currency}</b>\n"
        f"–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: <b>{len(referrals)}</b>\n"
        f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n<code>{ref_link}</code>"
        f"\n\nüë• <i>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–≥–∞ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å –∑–∞ –µ–≥–æ –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ!</i>"
        f"{referrals_text}"
        f"{history_text}"
    )

    share_text = (
        "üéÅ –ü–æ–ª—É—á–∏ –±–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!\n"
        "–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –≤ Rich Boost –∏ –ø–æ–ª—É—á–∞–π –ø–æ–¥–∞—Ä–∫–∏!\n"
        f"üëâ {ref_link}"
    )

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π", switch_inline_query=share_text)]
        ]
    )

    await message.answer(text, parse_mode="HTML", reply_markup=keyboard)